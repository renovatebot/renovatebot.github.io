name: publish-docs

on:
  push:
    branches:
      - '**'
      - '!gh-pages'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  PDM_VERSION: 2.26.0 # renovate: datasource=pypi depName=pdm
  HUSKY: 0 # disable husky on CI

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name || github.run_number }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true

      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0
        with:
          standalone: true

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: .node-version
          cache: 'pnpm' # doesn't cache cypress
          cache-dependency-path: |
            **/pnpm-lock.yaml
            **/package.json

      - name: Setup PDM
        uses: pdm-project/setup-pdm@94a823180e06fcde4ad29308721954a521c96ed0 # v4.4
        with:
          python-version-file: .python-version
          version: ${{ env.PDM_VERSION }}
          cache: true

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'bot@renovateapp.com'
          git config --global user.name  'Renovate Bot'
          python --version
          pdm --version

      - name: Cache node_modules and cypress
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('**/package.json', '**/pnpm-lock.yaml') }}

      - name: Installing dependencies
        run: make install

      - name: Run Prettier
        run: pnpm prettier

      - name: Run shellcheck
        uses: reviewdog/action-shellcheck@4c07458293ac342d477251099501a718ae5ef86e # v1.32.0
        with:
          reporter: github-pr-review
          filter_mode: nofilter
          path: |
            bin
            .devcontainer
            .husky
          pattern: '*.sh'
          check_all_files_with_shebangs: 'true'

      - name: Prepare docs
        run: make prepare

      - name: Build cache decoder
        run: make build-decoder

      - name: Build docs
        run: make build-docs

      - name: Upload site artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: site
          path: site/
          if-no-files-found: error

      - name: Upload pages artifact
        if: github.ref_name == 'main'
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: site/

      - name: Cypress run
        uses: cypress-io/github-action@e65cba2e7319696fc0fdc4d5a319b737aec4ba1c # v6.10.3
        with:
          start: make serve
          wait-on: 'http://127.0.0.1:8000/'
          # we have already installed all dependencies above
          install: false
        timeout-minutes: 3

      - name: Upload cypress artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: cypress
          path: |
            cypress/videos/
            cypress/screenshots/
          if-no-files-found: error

      - name: Publish docs
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: make deploy

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    needs:
      - build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
